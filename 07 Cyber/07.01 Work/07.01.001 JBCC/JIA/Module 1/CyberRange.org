:PROPERTIES:
:ID:       05386fd7-2bf2-41df-b3fe-efbeb7c91e67
:END:
#+Title: Creating a Cyber Range (JIA)
* Goal
The goal of this exercise is to create a cyber range.
** Topology
[[./img/topology.png]]
* Virtual machine installs
** Ubuntu-Server-01
*** VM Specs
 - 20GB - HDD in single file
 - NIC:
   - On setup: NAT
   - After setup: Host-Only
*** Install
DHCP bound 192.168.246.135/24
Set up sda with LVM taking up the whole drive apart from /boot (1.771G)
| Part  | Size   | Format |
|-------+--------+--------|
| /     | 10G    | ext4   |
| /boot | 1.771G | ext4   |
| free  | 8.22G  | -      |
**** Username
user:user
**** Software
OpenSSH server
No other software
** pfsense
*** VM Specs
 - 20GB -  HDD in one file
 - NIC:
   - On Setup: NAT
   - After setup:
     - NIC 1: NAT
       - MAC: 00:0C:29:0F:AA:22
     - NIC 2: Host-Only
       - MAC: 00:0C:29:0F:AA:2C
*** Install
ZFS guided install single "striped" install
** Ubuntu-Server-02
Linked clone of [[Ubuntu-Server-01]]
*** Username
user:user
** Kali-Blue
Copy the extracted virtual machine into Desktop/VMs where the rest of the VMs created so far are and open the kali.vmx file.
*** Username
kali:kali
** Kali-Purple
*** VM specs
 - 60GB - HDD in single file
 - NIC:
   - On setup: NAT
   - After setup: Host-Only
*** Username
kali:kali
*** Install
| Part | Size  | Format |
|------+-------+--------|
| /    | 61.1G | ext4   |
| swap | 3.3G  | swap   |
**** Extra software
 - Desktop
   - XFCE
 - Defensive Tools
   - Identify
   - Protect
   - Detect
   - Respond
   - Recover
** Win10-V
Imported from provided MSEdge-Win10-VMware.ovf file
*** Username
IEUser:Passw0rd!
** Win10-H
Cloned from [[Win10-V]] as a full clone
*** Username
IEUser:Passw0rd!

* Excursus on exporting
The lab has an exercise in exporting and importing VMs this has been skipped for brevities sake
* Virtual Network
 - Open the virtual network editor (Edit -> Virtual Network Editor...)
 - grant Administrator privilege (Change Settings)
 - Add Network
   - Host-Only
   - Rename to IA-Internal-Network
   - Uncheck
     - Connect a host virtual adapter to this network
     - Use local DHCP service to distribute IP address to VMs
 - Move all machines onto IA-Internal-Network
   - Edit Virtual Machine Settings
   - Network Adapter
   - Custom: IA-Insternal-Network
** pfSense
 - Add another NIC and assign it to IA-Internal-Network
 - This router should have two NICs
   - NAT
   - IA-Internal-Network
 - Record the MAC addresses
*** Configuration
 - Assign interfaces
   - Should VLANs be set up now [y:n]? n
   - WAN insterface should match the WAN MAC
   - LAN interface should match the LAN MAC
 - Set interfaces IP address
   - WAN: DHCP
   - LAN: 192.168.1.1 /24
     - DHCP server? y
       - 192.168.1.100 - 192.168.1.200
 - Reboot system
   - Reboot normally
 - Reset webConfigurator password
   - For initial setup
     admin:pfsense
*** pfSense web password
admin:Sysadmin123
*** Webconfigurator
On kali-purple go to 192.168.1.1, login and do the following
 - Services -> DNS Resolver
   - Register DHCP releases in the DNS Resolver
   - Register DHCP static mappings in the DNS Resolver
   - Save and Apply
 - Services -> DHCP Server
   - Ensure the range is correct
   - Static assign kali-purple 192.168.1.10
     - Copy My MAC
     - Client Identifier: Kali-Purple
     - IP Address: 192.168.1.10
     - Hostname: kali-purple
     - Description: ia.local
     - ARP Table Static Entry: *check*
   - Save and Apply
** Kali-purple
reset the wired ethernet connection and ensure the static ip address has been assigned.
#+BEGIN_SRC bash
 sudo ip link set eth0 down
 sudo ip link set eth0 up
 sudo dhclient -r
#+END_SRC
* Testing
You should now be able to bring all the machines up and ping test
